<?xml version="1.0"?>
<launch>
  <arg name="limited" default="false"  doc="If true, limits joint range [-PI, PI] on all joints." />
  <arg name="paused" default="false" doc="Starts gazebo in paused mode" />
  <arg name="gui" default="true" doc="Starts gazebo gui" />
  
  <!-- startup simulated world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" default="$(find ur5_intpro)/worlds/icra_world.world"/>
    <!-- <arg name="world_name" default="$(find ur5_intpro)/worlds/world.world"/> -->
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gui)"/>
  </include>

  <!-- send robot urdf to param server -->
  <!-- <include file="$(find ur_description)/launch/ur5_upload.launch"> -->
    <!-- <arg name="limited" value="$(arg limited)"/> -->
  <!-- </include> -->

  <!-- <arg name="limited" default="false" doc="If true, limits joint range [-PI, PI] on all joints." /> -->
  <arg name="transmission_hw_interface" default="hardware_interface/PositionJointInterface" />

  <param unless="$(arg limited)" name="robot_description" command="$(find xacro)/xacro --inorder '$(find ur5_intpro)/urdf/custom_ur5.urdf.xacro' transmission_hw_interface:=$(arg transmission_hw_interface)" />
  <!-- <param if="$(arg limited)" name="robot_description" command="$(find xacro)/xacro inorder '$(find ur_description)/urdf/ur5_joint_limited_robot.urdf.xacro' transmission_hw_interface:=$(arg transmission_hw_interface)" /> -->

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot -z 0.0" respawn="false" output="screen" />

  <include file="$(find ur_gazebo)/launch/controller_utils.launch"/>

  <!-- start this controller -->
  <!-- <rosparam file="$(find ur_gazebo)/controller/arm_controller_ur5.yaml" command="load"/>
  <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/> -->

  <!-- load other controllers -->
  <!-- <node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="load joint_group_position_controller" /> -->

<!-- <rosparam command="load" file="$(find ur5_intpro)/config/ur5_controllers.yaml" />
<node name="controller_spawner" pkg="controller_manager" type="spawner"                args="joint_0_position_controller 
                                                                                             joint_1_position_controller 
                                                                                             joint_2_position_controller 
                                                                                             joint_3_position_controller 
                                                                                             joint_4_position_controller
                                                                                             joint_5_position_controller
                                                                                             finger_position_controller"                                                                                     
                                                                                             respawn="false" output="screen"/>
<arg name="dev" default="0"/>

<node name="joy_node" pkg="joy" type="joy_node" output="screen">
 <param name="dev" value="/dev/input/js$(arg dev)" />
</node> -->

<!-- <arg name="ur5_ip" default="10.218.100.220" /> -->
<!-- <arg name="ur5_ip" default="10.218.100.220" />
<arg name="ur5_port" default="30003" />
<arg name="r2fg_port" default="/dev/ttyUSB0"/>

<param name="ur5/ip" value="$(arg ur5_ip)" />
<param name="ur5/port" value="$(arg ur5_port)" />
<param name="r2fg/port" value="$(arg r2fg_port)" /> -->


</launch>
